@model HomeReadingLibraryWeb.Identity.Accounts.VolunteerByClassViewModel

<h2>Select a teacher from the dropdown and then click on your name to login</h2>

@await Html.PartialAsync("_ValidationSummary")

@if (Model.Classes.Any())
{
    <div class="row" *ngIf="classes">
        <div class="col-6">
            <h3>
                <label for="classDropdown" class="float-left">Teacher:&nbsp;</label>
                <select id="classDropdown" class="float-left">
                    <option value="">(Select a teacher to login)</option>
                    @foreach (var cls in Model.Classes.OrderBy(c => c.Grade).ThenBy(c => c.TeacherName))
                    {
                        <option value="@cls.ClassId">@cls.TeacherName Grade: @cls.Grade</option>

                    }
                </select>
            </h3>
        </div>
        <div class="col">
            <form asp-action="cancel"  asp-controller="SignIn" method="post" class="form">
                <input type="hidden" asp-for="ReturnUrl" id="ReturnUrl2" />
                <button type="submit" class="btn btn-primary">Go Back Home</button>
            </form>
        </div>
    </div>
    <div class="row" *ngIf="classes">
        <form asp-action="signin" asp-controller="account" method="post" class="form float-left">
            <input type="hidden" asp-for="ReturnUrl" />
            @foreach (var cls in Model.Classes.OrderBy(c => c.Grade).ThenBy(c => c.TeacherName))
            {

                <div data-class="@cls.ClassId" style="display: none">
                    @foreach (var volunteer in cls.Volunteers.OrderBy(v => v.LastName).ThenBy(v => v.FirstName))
                    {
                        <p>
                            <button type="submit" class="btn btn-primary" name="volunteer" value="@volunteer.VolunteerId">@volunteer.LastName, @volunteer.FirstName</button>
                        </p>
                    }
                </div>
            }
        </form>
    </div>

    <hr />

}

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#adminLoginModel">
    Admin Login
</button>

<!-- Modal -->
<div class="modal fade" id="adminLoginModel" tabindex="-1" role="dialog" aria-labelledby="adminLoginModel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form  asp-action="adminsignin" asp-controller="SignIn" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Admin Login</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <label for="username">Username:</label>
                    <input class="form-control" id="username" name="username">
                    <label for="password">Password:</label>
                    <input class="form-control" type="password" id="password" name="password">
                    @Html.Hidden("returnUrl", Model.ReturnUrl)
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            function showOrHideClasses(currentClassId) {
                $('div[data-class]').hide();
                $('div[data-class=\'' + currentClassId + '\']').show();
            }

            $("#classDropdown").on('change', function () {
                showOrHideClasses(this.value);
            });
            showOrHideClasses('');
        });
    </script>
}
